{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Apollo/workspace/Prenda/quotes-sandbox/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Icon } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport \"./styles.css\";\n\nconst Quote = quote => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, quote.quote), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, quote.author));\n};\n\nconst App = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        quotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        randomQuote = _useState4[0],\n        setRandomQuote = _useState4[1];\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data, randomNumber;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            console.log(data.quotes);\n            setQuotes(data.quotes);\n            randomNumber = Math.floor(Math.random() * data.quotes.length);\n            setRandomQuote(data.quotes[randomNumber]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const randomQuoteGenerator = () => {\n    if (quotes) {\n      let randomNumber = Math.floor(Math.random() * quotes.length);\n      setRandomQuote(quotes[randomNumber]);\n    }\n  };\n\n  const favoriteQuote = () => {//this will favorite a users quotes\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Quote Time\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, randomQuote ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormatQuoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }), randomQuote.quote, /*#__PURE__*/React.createElement(FormatQuoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, randomQuote.author)) : '...loading'), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    spacing: 3,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"newQuoteBtn\",\n    variant: \"contained\",\n    onClick: randomQuoteGenerator,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"New Quote\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    spacing: 3,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"newQuoteBtn\",\n    variant: \"contained\",\n    onClick: favoriteQuote,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Favorites\"))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Apollo/workspace/Prenda/quotes-sandbox/src/App.js"],"names":["React","useState","useEffect","Container","Grid","Button","Icon","FormatQuoteIcon","StarBorderIcon","IconButton","FavoriteIcon","Card","CardActions","CardContent","Quote","quote","author","App","quotes","setQuotes","randomQuote","setRandomQuote","loadData","fetch","response","json","data","console","log","randomNumber","Math","floor","random","length","randomQuoteGenerator","favoriteQuote"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Icon } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport \"./styles.css\";\n\n\nconst Quote = (quote) => {\n    return (\n      <div>\n        <h2>{quote.quote}</h2>\n        <br />\n        <p>{quote.author}</p>\n      </div>\n    )\n  }\n\nconst App = () => {\n\n  const [quotes, setQuotes] = useState()\n  const [randomQuote, setRandomQuote] = useState()\n  \n  useEffect(() => {\n    \n    loadData()\n    \n  }, [])\n\n  const loadData = async () => {\n    const response = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    const data = await response.json()\n    console.log(data.quotes)\n    setQuotes(data.quotes)\n    let randomNumber = Math.floor(Math.random() * data.quotes.length)\n    setRandomQuote(data.quotes[randomNumber])\n  }\n\n  const randomQuoteGenerator = () => {\n    if (quotes) {\n      let randomNumber = Math.floor(Math.random() * quotes.length)\n      setRandomQuote(quotes[randomNumber])\n    }\n    \n  }\n\n  const favoriteQuote = () => {\n    //this will favorite a users quotes\n  }\n\n  return (\n    <div className='main'>\n      <Container className=\"App\">\n        <h1>Quote Time</h1>\n        <Grid container xs={12} justify=\"center\" spacing={3}>\n          <Grid item>\n            <Card>\n              <CardContent>\n            {\n              randomQuote ?  \n                <div>\n                  <h2><FormatQuoteIcon />{randomQuote.quote}<FormatQuoteIcon /></h2>\n                  <p>{randomQuote.author}</p>\n                </div> : '...loading'\n              }\n              </CardContent>\n               <CardActions>\n                \n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid container item xs={4}>\n            <Grid item spacing={3} xs={6}>\n              <Button className='newQuoteBtn' variant='contained' onClick={randomQuoteGenerator} color='primary'>New Quote</Button>\n            </Grid>\n            \n            <Grid item spacing={3} xs={6}>\n              <Button className='newQuoteBtn' variant='contained' onClick={favoriteQuote} color='primary'>Favorites</Button>\n            </Grid>\n            \n          </Grid>\n          \n        </Grid> \n      </Container>\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}