{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Apollo/workspace/Prenda/quotes-sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Apollo/workspace/Prenda/quotes-sandbox/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Icon } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport \"./styles.css\";\n\nconst Quote = quote => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, quote.quote), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, quote.author));\n};\n\nconst App = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        quotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        randomQuote = _useState4[0],\n        setRandomQuote = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        favorites = _useState6[0],\n        setFavorites = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        checked = _useState8[0],\n        setChecked = _useState8[1];\n\n  useEffect(() => {\n    loadData();\n    getFavorites();\n  }, []);\n\n  const loadData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data, randomNumber;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            console.log(data.quotes);\n            setQuotes(data.quotes);\n            randomNumber = Math.floor(Math.random() * data.quotes.length);\n            setRandomQuote([data.quotes[randomNumber], randomNumber]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getFavorites = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var favorites, favoritesObject;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            favorites = localStorage.getItem('favoriteQuotes');\n            console.log('line 52: ' + favorites);\n\n            if (favorites) {\n              console.log('line 54: ' + favorites);\n              favoritesObject = JSON.parse(favorites);\n              setFavorites(favoritesObject);\n            }\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getFavorites() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const randomQuoteGenerator = () => {\n    if (quotes) {\n      let randomNumber = Math.floor(Math.random() * quotes.length);\n      setRandomQuote([quotes[randomNumber], randomNumber]);\n    }\n  };\n\n  const updateFavorites = () => {\n    if (favorites) {\n      let currentFavorites = favorites;\n      currentFavorites.push(randomQuote);\n      setFavorites(currentFavorites);\n      let favoritesString = JSON.stringify(currentFavorites);\n      localStorage.setItem('favoriteQuotes', favoritesString);\n    }\n  };\n\n  const showfavoriteQuotes = () => {};\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Quote Time\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, randomQuote ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormatQuoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }), randomQuote[0].quote, /*#__PURE__*/React.createElement(FormatQuoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 64\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, randomQuote[0].author)) : '...loading'), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    onClick: updateFavorites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    justify: \"center\",\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    spacing: 3,\n    xs: 4,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"newQuoteBtn\",\n    variant: \"contained\",\n    onClick: randomQuoteGenerator,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"New Quote\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    spacing: 3,\n    xs: 4,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"newQuoteBtn\",\n    variant: \"contained\",\n    onClick: handleChange,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, checked ? 'Hide My Favorites' : 'Show My Favorites')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    spacing: 3,\n    xs: 12,\n    md: 12,\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    justify: \"center\",\n    style: {\n      maxWidth: 750,\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, \" My Favorite Quotes\"), quotes ? favorites.map(favorite => {\n    console.log(JSON.stringify(favorites));\n    {\n      console.log(favorite);\n    }\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      style: {\n        padding: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, favorite[0].quote), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, favorite[0].author)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 31\n      }\n    }, \"X\")));\n  }) : null)))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Apollo/workspace/Prenda/quotes-sandbox/src/App.js"],"names":["React","useState","useEffect","Container","Grid","Button","Icon","FormatQuoteIcon","StarBorderIcon","IconButton","FavoriteIcon","Card","CardActions","CardContent","Fade","FormControlLabel","Quote","quote","author","App","quotes","setQuotes","randomQuote","setRandomQuote","favorites","setFavorites","checked","setChecked","loadData","getFavorites","fetch","response","json","data","console","log","randomNumber","Math","floor","random","length","localStorage","getItem","favoritesObject","JSON","parse","randomQuoteGenerator","updateFavorites","currentFavorites","push","favoritesString","stringify","setItem","showfavoriteQuotes","handleChange","prev","marginTop","maxWidth","margin","map","favorite","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Icon } from '@material-ui/core';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport \"./styles.css\";\n\n\nconst Quote = (quote) => {\n    return (\n      <div>\n        <h2>{quote.quote}</h2>\n        <br />\n        <p>{quote.author}</p>\n      </div>\n    )\n  }\n\nconst App = () => {\n\n  const [quotes, setQuotes] = useState()\n  const [randomQuote, setRandomQuote] = useState()\n  const [favorites, setFavorites] = useState([])\n  const [checked, setChecked] = useState(false);\n  \n  useEffect(() => {\n    \n    loadData()\n    getFavorites()\n    \n  }, [])\n\n  const loadData = async () => {\n    const response = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    const data = await response.json()\n    console.log(data.quotes)\n    setQuotes(data.quotes)\n    let randomNumber = Math.floor(Math.random() * data.quotes.length)\n    setRandomQuote([data.quotes[randomNumber],randomNumber])\n  }\n\n  const getFavorites = async () => {\n    let favorites = localStorage.getItem('favoriteQuotes') \n    console.log('line 52: ' +favorites)\n    if (favorites) {\n      console.log('line 54: ' +favorites)\n      let favoritesObject = JSON.parse(favorites)\n      setFavorites(favoritesObject)\n    }\n  }\n\n\n  const randomQuoteGenerator = () => {\n    if (quotes) {\n      let randomNumber = Math.floor(Math.random() * quotes.length)\n      setRandomQuote([quotes[randomNumber], randomNumber])\n    }\n    \n  }\n\n  const updateFavorites = () => {\n    if (favorites) {\n      let currentFavorites = favorites\n      currentFavorites.push(randomQuote)\n      setFavorites(currentFavorites)\n      let favoritesString = JSON.stringify(currentFavorites)\n      localStorage.setItem('favoriteQuotes', favoritesString)\n    }\n  }\n\n  const showfavoriteQuotes = () => {\n\n  }\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <div className='main'>\n      <Container className=\"App\">\n        <h1>Quote Time</h1>\n        <Grid container xs={12} justify=\"center\" spacing={3}>\n          <Grid item>\n            <Card>\n              <CardContent>\n            {\n              randomQuote ?  \n                <div>\n                  <h2><FormatQuoteIcon />{randomQuote[0].quote}<FormatQuoteIcon /></h2>\n                  <p>{randomQuote[0].author}</p>\n                </div> : '...loading'\n              }\n              </CardContent>\n               <CardActions>\n                \n                <IconButton aria-label=\"add to favorites\" onClick={updateFavorites}>\n                  <FavoriteIcon />\n                </IconButton>\n\n              </CardActions>\n            </Card>\n          </Grid>\n\n          <Grid container item justify=\"center\" xs={12}>\n            \n            <Grid item spacing={3} xs={4} md={2}>\n              <Button className='newQuoteBtn' variant='contained' onClick={randomQuoteGenerator} color='primary'>New Quote</Button>\n            </Grid>\n            \n            <Grid item spacing={3} xs={4} md={2}>\n              <Button className='newQuoteBtn' variant='contained' onClick={handleChange} color='primary'>\n                {checked ? 'Hide My Favorites' : 'Show My Favorites' }\n                </Button>\n            </Grid>\n\n            <Grid item spacing={3} xs={12} md={12} style={{marginTop: 25}}>\n              <Fade in={checked}>\n                <Card justify=\"center\" style={{maxWidth: 750, margin: 'auto'}}>\n                  <h2> My Favorite Quotes</h2>\n                  {\n                    quotes ? \n                      favorites.map( (favorite) => {\n                        console.log(JSON.stringify(favorites))\n                        {console.log(favorite)}\n                        return (\n                          <Card>\n                            <Grid container>\n                              <Grid item xs={10} style={{padding: 15}}>\n                                <p>{favorite[0].quote}</p>\n                                <p>{favorite[0].author}</p>\n                              </Grid>\n                              <Grid item xs={2} style={{marginTop: 25}}>\n                                X\n                              </Grid>\n                            </Grid>\n                            \n                          </Card>\n                        )\n                      }) \n                      : null\n                  }\n                </Card>\n              </Fade>\n            </Grid>\n            \n          </Grid>\n          \n        </Grid> \n      </Container>\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}